<templateSet group="Kotlin">
  <template name="visible" value="$END$visibility = View.VISIBLE" description="Inserts &quot;View.VISIBLE&quot; at cursor location" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
      <option name="KOTLIN_CLASS" value="false" />
      <option name="KOTLIN_COMMENT" value="false" />
      <option name="KOTLIN_EXPRESSION" value="false" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="false" />
      <option name="KOTLIN_STATEMENT" value="false" />
      <option name="KOTLIN_TOPLEVEL" value="false" />
    </context>
  </template>
  <template name="gone" value="$END$visibility = View.GONE" description="Inserts &quot;View.GONE&quot; at cursor location" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
      <option name="KOTLIN_CLASS" value="false" />
      <option name="KOTLIN_COMMENT" value="false" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="false" />
      <option name="KOTLIN_STATEMENT" value="false" />
      <option name="KOTLIN_TOPLEVEL" value="false" />
    </context>
  </template>
  <template name="INVISIBLE" value="$END$visibility = View.INVISIBLE" description="Inserts &quot;View.INVISIBLE&quot; at cursor location" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
      <option name="KOTLIN_CLASS" value="false" />
      <option name="KOTLIN_COMMENT" value="false" />
      <option name="KOTLIN_EXPRESSION" value="false" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="false" />
      <option name="KOTLIN_STATEMENT" value="false" />
      <option name="KOTLIN_TOPLEVEL" value="false" />
    </context>
  </template>
  <template name="pval" value="private val " description="Inserts &quot;private val&quot; at cursor location" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="intialpresenter" value="  internal var view: RenderableView? = null&#10;  internal var state: ViewState = ViewState.InitialState&#10;  &#10;  internal val scope = CoroutineScope(coroutineContextProvider.defaultContext)&#10;  private val errorHandler = CoroutineExceptionHandler{ _, error -&gt; &#10;    displayError(error)&#10;  }" description="Inserts some boilerplate presenter business" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_EXPRESSION" value="true" />
      <option name="KOTLIN_OBJECT_DECLARATION" value="true" />
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>